events {

}

http {
    map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
    }


  client_max_body_size 100M;


  server {
    listen 80;
    
    auth_basic	"Private";
    auth_basic_user_file htpasswd;

    location /jenkins {
	proxy_pass http://127.0.0.1:6060;
	proxy_http_version 1.1;

	# Required for Jenkins websocket agents
	proxy_set_header   Connection        $connection_upgrade;
	proxy_set_header   Upgrade           $http_upgrade;

	proxy_set_header   Host              $host;
	proxy_set_header   X-Real-IP         $remote_addr;
	proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
	proxy_set_header   X-Forwarded-Proto $scheme;
	proxy_max_temp_file_size 0;

	#this is the maximum upload size
	client_max_body_size       10m;
	client_body_buffer_size    128k;

	proxy_connect_timeout      90;
	proxy_send_timeout         90;
	proxy_read_timeout         90;
	proxy_buffering            off;
	proxy_request_buffering    off; # Required for HTTP CLI commands
	proxy_set_header Connection ""; # Clear for keepalive
    }

    location /management {
	proxy_pass https://127.0.0.1:9090;

        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Required for web sockets to function
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Pass ETag header from Cockpit to clients.
        # See: https://github.com/cockpit-project/cockpit/issues/5239
        gzip off;
	auth_basic off;
    }

    location /notes_api {
       proxy_pass http://127.0.0.1:41184;
       proxy_set_header X-Forwarded-Host $host:$server_port;
       proxy_set_header X-Forwarded-Server $host;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

       rewrite ^/notes_api(.*) $1 break; 

       proxy_redirect	off;
       proxy_set_header	Host	$host;

       auth_basic off;
    }

    
    location /notes {
       proxy_pass http://127.0.0.1:22300;
       proxy_set_header X-Forwarded-Host $host:$server_port;
       proxy_set_header X-Forwarded-Server $host;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

       rewrite ^/notes(.*) $1 break; 

       proxy_redirect	off;
       proxy_set_header	Host	$host;

       auth_basic off;
    }
 


    location /cloud {
       proxy_pass http://127.0.0.1:8000;
       proxy_set_header X-Forwarded-Host $host:$server_port;
       proxy_set_header X-Forwarded-Server $host;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 
       auth_basic off;
       
       rewrite ^/cloud(.*) $1 break;
    }
    
    location /.well-known/carddav {
    	return 301 https://$host/cloud/remote.php/dav;
    	auth_basic off;
    }
    
    location /.well-known/caldav {
    	return 301 https://$host/cloud/remote.php/dav;
    	auth_basic off;
    }
    
    location /prowlarr {
       proxy_pass http://127.0.0.1:9696;
    }

    location /jellyfin {
       proxy_pass http://127.0.0.1:8096;

        proxy_pass_request_headers on;

        proxy_set_header Host $host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;
	auth_basic off;
    }
    
    location /sonarr {
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection $http_connection;       
	proxy_pass http://127.0.0.1:8989;
    }
    
    location /radarr {
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection $http_connection;

       proxy_pass http://127.0.0.1:7878;
    }
    
     location /transmission {
              proxy_pass http://127.0.0.1:9091;
              proxy_pass_header X-Transmission-Session-Id;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     }
     
     location / {
       proxy_pass http://127.0.0.1:8080;
       
      auth_basic off;
    }
  }
}
